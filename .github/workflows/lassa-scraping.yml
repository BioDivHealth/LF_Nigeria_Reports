name: Lassa Reports Scraping Pipeline

on:
  schedule:
    # Run every Monday at 1:00 AM UTC
    - cron: '0 1 * * 1'
  workflow_dispatch:  # Allow manual triggering

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Create data directories
      run: |
        mkdir -p data/raw/year
        for y in 20 21 22 23 24 25; do
          mkdir -p data/raw/year/$y
        done
        mkdir -p data/raw/downloaded
        mkdir -p data/processed/CSV
        mkdir -p data/processed/CSV/CSV_LF_25_Sorted
        mkdir -p data/processed/PDF
        mkdir -p data/processed/PDF/PDFs_Lines_25
        mkdir -p data/documentation
        mkdir -p exports
        
    - name: Run Lassa Reports Scraping Pipeline
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        SCRAPER_API_KEY: ${{ secrets.SCRAPER_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: python main.py
      
    - name: Commit and push exported data
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        # Only add the latest data file and README, not the timestamped versions
        git add exports/lassa_data_latest.csv exports/README.md
        git commit -m "Update exported Lassa fever data [skip ci]" || echo "No changes to commit"
        git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
